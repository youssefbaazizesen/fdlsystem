// <auto-generated />
using System;
using FDLsys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FDLsys.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FDLsys.ListesFDL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Edition_number")
                        .HasColumnType("int");

                    b.Property<int>("FDay_desert_time")
                        .HasColumnType("int");

                    b.Property<int>("FDay_time")
                        .HasColumnType("int");

                    b.Property<int>("Fnight_desert_time")
                        .HasColumnType("int");

                    b.Property<int>("Fnight_time")
                        .HasColumnType("int");

                    b.Property<string>("airplane_reg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("captain_remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("deadhead")
                        .HasColumnType("int");

                    b.Property<string>("matricule_CDB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("month")
                        .HasColumnType("int");

                    b.Property<int>("total_airborn")
                        .HasColumnType("int");

                    b.Property<int>("total_block")
                        .HasColumnType("int");

                    b.Property<short>("validation")
                        .HasColumnType("smallint");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("listesfdl");
                });

            modelBuilder.Entity("FDLsys.Sequences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ab_off_hour")
                        .HasColumnType("int");

                    b.Property<int>("ab_off_minute")
                        .HasColumnType("int");

                    b.Property<int>("ab_on_hour")
                        .HasColumnType("int");

                    b.Property<int>("ab_on_minute")
                        .HasColumnType("int");

                    b.Property<float>("added_fuel")
                        .HasColumnType("real");

                    b.Property<int>("airborn_time")
                        .HasColumnType("int");

                    b.Property<int>("block_time")
                        .HasColumnType("int");

                    b.Property<int>("bt_in_hour")
                        .HasColumnType("int");

                    b.Property<int>("bt_in_minute")
                        .HasColumnType("int");

                    b.Property<int>("bt_out_hour")
                        .HasColumnType("int");

                    b.Property<int>("bt_out_minute")
                        .HasColumnType("int");

                    b.Property<int>("expected_dep_time")
                        .HasColumnType("int");

                    b.Property<float>("fuel_at_departure")
                        .HasColumnType("real");

                    b.Property<int>("listesfdlID")
                        .HasColumnType("int");

                    b.Property<float>("remaining_fuel")
                        .HasColumnType("real");

                    b.Property<float>("remaining_fuel_from_previous")
                        .HasColumnType("real");

                    b.Property<float>("uplift")
                        .HasColumnType("real");

                    b.Property<float>("used_fuel")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("listesfdlID");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("FDLsys.Users", b =>
                {
                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PassworSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Passwordhash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricule");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FDLsys.Sequences", b =>
                {
                    b.HasOne("FDLsys.ListesFDL", "listefdl")
                        .WithMany("Sequences")
                        .HasForeignKey("listesfdlID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("listefdl");
                });

            modelBuilder.Entity("FDLsys.ListesFDL", b =>
                {
                    b.Navigation("Sequences");
                });
#pragma warning restore 612, 618
        }
    }
}
